// <auto-generated />
using Gym.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gym.Migrations
{
    [DbContext(typeof(GymContext))]
    partial class GymContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Gym.Models.GymClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GymClasses");
                });

            modelBuilder.Entity("Gym.Models.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Gym.Models.MemberClass", b =>
                {
                    b.Property<int>("MemberId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GymClassId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MemberId", "GymClassId");

                    b.HasIndex("GymClassId");

                    b.ToTable("MemberClasses");
                });

            modelBuilder.Entity("Gym.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("Gym.Models.Member", b =>
                {
                    b.HasOne("Gym.Models.Trainer", "Trainer")
                        .WithMany("Members")
                        .HasForeignKey("TrainerId");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Gym.Models.MemberClass", b =>
                {
                    b.HasOne("Gym.Models.GymClass", "GymClass")
                        .WithMany("MemberClasses")
                        .HasForeignKey("GymClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gym.Models.Member", "Member")
                        .WithMany("MemberClasses")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GymClass");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("Gym.Models.GymClass", b =>
                {
                    b.Navigation("MemberClasses");
                });

            modelBuilder.Entity("Gym.Models.Member", b =>
                {
                    b.Navigation("MemberClasses");
                });

            modelBuilder.Entity("Gym.Models.Trainer", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
